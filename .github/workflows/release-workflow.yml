# SPDX-FileCopyrightText: 2025 Digg - Agency for Digital Government
#
# SPDX-License-Identifier: CC0-1.0
name: Release Workflow
on:
  push:
    tags:
      - "v[0-9]*.[0-9]*.[0-9]*" # Enforces vX.Y.Z semver format
permissions:
  contents: read
jobs:
  check-release-permission:
    runs-on: ubuntu-latest
    outputs:
      IS_SNAPSHOT: ${{ steps.check-tag.outputs.IS_SNAPSHOT }}
      CAN_RELEASE: ${{ steps.check-permission.outputs.CAN_RELEASE }}
    steps:
      - name: Check tag type
        id: check-tag
        run: |
          TAG_NAME="${{ github.ref_name }}"
          if [[ "${TAG_NAME}" == *-SNAPSHOT ]]; then
            echo "IS_SNAPSHOT=true" >> "$GITHUB_OUTPUT"
          else
            echo "IS_SNAPSHOT=false" >> "$GITHUB_OUTPUT"
          fi
      
      - name: Check permission
        id: check-permission
        env:
          AUTHORIZED_DEVS: ${{ secrets.AUTHORIZED_RELEASE_DEVELOPERS }}
        run: |
          # Always allow SNAPSHOT releases
          if [[ "${{ steps.check-tag.outputs.IS_SNAPSHOT }}" == "true" ]]; then
            echo "CAN_RELEASE=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          
          # For non-SNAPSHOT, check if current actor is in the authorized list
          # Simple grep for exact username match
          ACTOR="${{ github.actor }}"
          if [[ -n "$AUTHORIZED_DEVS" ]] && echo ",$AUTHORIZED_DEVS," | grep -q ",$ACTOR,"; then
            echo "CAN_RELEASE=true" >> "$GITHUB_OUTPUT"
          else
            echo "CAN_RELEASE=false" >> "$GITHUB_OUTPUT"
          fi
  
  fail-unauthorized:
    runs-on: ubuntu-latest
    needs: check-release-permission
    if: needs.check-release-permission.outputs.CAN_RELEASE == 'false'
    steps:
      - name: Fail unauthorized release
        run: |
          echo "Error: ${{ github.actor }} is not authorized to create non-SNAPSHOT releases."
          echo "Only authorized developers can create production releases."
          exit 1

  version-bump:
    needs: check-release-permission
    if: needs.check-release-permission.outputs.CAN_RELEASE == 'true'
    secrets: inherit
    permissions:
      contents: write
    uses: diggsweden/.github/.github/workflows/version-bump-changelog.yml@main
    with:
      updatePom: true
      file_pattern: pom.xml CHANGELOG.md

  release-lib:
    needs: [version-bump, check-release-permission]
    if: needs.check-release-permission.outputs.CAN_RELEASE == 'true'
    permissions:
      contents: write
      id-token: write 
      packages: write 
      issues: write
    secrets: inherit
    uses: ./.github/workflows/release-lib.yml